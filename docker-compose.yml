networks:
  laravel:

services:
  nginx:
    image: "nginx:latest"
    ports:
      - "80:80"
    volumes:
      - ./runtimes/conf.d/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./src:/var/www/html:delegated
    depends_on:
      - php
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost"]
      retries: 3
      timeout: 5s
    networks:
      - laravel
  php:
    build:
      context: ./runtimes
      dockerfile: php.Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    environment:
      XDEBUG_MODE: "develop,debug,coverage"
      XDEBUG_CONFIG: "client_host=host.docker.internal"
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - pgsql
      - redis
      - mailpit
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      retries: 3
      timeout: 5s
    networks:
      - laravel
  pgsql:
    image: "postgres:16"
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    environment:
      PGPASSWORD: "secret"
      POSTGRES_DB: "laravel"
      POSTGRES_USER: "pgadmin"
      POSTGRES_PASSWORD: "secret"
    volumes:
      - pgsql:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "laravel", "-U", "pgadmin" ]
      retries: 3
      timeout: 5s
    networks:
      - laravel
  mailpit:
    image: 'axllent/mailpit:latest'
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    healthcheck:
      test: ["CMD", "wget", "--no-check-certificate", "--spider", "http://localhost:8025/readyz" ]
      retries: 3
      timeout: 5s
    networks:
      - laravel
  redis:
    image: 'redis:alpine'
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - laravel
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
  npm:
    image: "node:22-alpine"
    ports:
      - "3000:3000"
      - "3001:3001"
      - "5173:5173"
    volumes:
      - ./src:/var/www/html
    working_dir: "/var/www/html"
    entrypoint: [ "npm" ]
    networks:
      - laravel
  composer:
    image: composer:2
    volumes:
      - ./src:/var/www/html
    working_dir: "/var/www/html"
    entrypoint: [ "composer" ]
    networks:
      - laravel

volumes:
  pgsql:
    driver: local
  redis:
    driver: local
